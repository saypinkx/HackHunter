services:
  mongodb:
    image: mongo:5.0
    ports:
      - 27017:27017
    volumes:
      - /data3/db:/data/db
    restart: unless-stopped
    env_file:
      - mongo.conf
#    environment:
#     MONGO_INITDB_ROOT_USERNAME: root
#     MONGO_INITDB_ROOT_PASSWORD: root
    command: [--auth]
  redis:
    image: redis:6
    container_name: redis
    restart: unless-stopped
    volumes:
      - redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    command: redis-server /usr/local/etc/redis/redis.conf

  server:
    build:
      context: server
      dockerfile: Dockerfile
    env_file:
      - server/.env-prod
    container_name: server
    ports:
      - 8000:8000
    restart: unless-stopped
    depends_on:
      - mongodb
      - redis
  bot:
    build:
      context: client
      dockerfile: Dockerfile
    env_file:
      - client/.env-prod
    container_name: bot

  worker:
    build:
      context: server
      dockerfile: Dockerfile
    command: celery -A api.worker:celery worker --loglevel=INFO
    ports:
      - 6162:6162
    restart: unless-stopped
    env_file:
      - server/.env-prod
    environment:
      - CELERY_BROKER=redis://62.113.104.103:6379/1
      - CELERY_RESULT_BACKEND=redis://62.113.104.103:6379/1
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - DEBUG=1
      - CELERY_BROKER_TRANSPORT=amqp
      - CELERY_BROKER_CONNECTION_RETRY=True
    depends_on:
      - server
      - redis
  flower:
    build:
      context: server
      dockerfile: Dockerfile
    command: celery -A api.worker:celery flower
    ports:
      - 5555:5555
    restart: unless-stopped
    depends_on:
      - server
      - redis
      - worker
    environment:
      - CELERY_BROKER=redis://62.113.104.103:6379/1
      - CELERY_RESULT_BACKEND=redis://62.113.104.103:6379/1
      - CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP=True
      - DEBUG=1
      - CELERY_BROKER_TRANSPORT=amqp
      - CELERY_BROKER_CONNECTION_RETRY=True
  hub:
    image: selenium/hub:4.0.0-rc-2-20210930
    container_name: seleniumHub
    ports:
      - "4444:4444"
    restart: unless-stopped


  chrome:
    image: selenium/node-chrome:4.0.0-rc-2-20210930
    shm_size: "2gb"
    environment:
      - SE_EVENT_BUS_HOST=seleniumHub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_MAX_SESSIONS=3
    depends_on:
      - hub
    restart: unless-stopped
  extractor:
    build:
      context: extractor
      dockerfile: Dockerfile
    env_file:
      - extractor/.env-prod
    restart: unless-stopped
    container_name: extractor
    depends_on:
      - mongodb
      - redis
      - server
      - chrome
      - hub



volumes:
  db:
  redis.conf:

